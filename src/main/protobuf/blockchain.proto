syntax = "proto3";

option java_package = "com.avaglir.blockchain.generated";
option java_multiple_files = true;

message UnitMessage {}

message Block {
    uint64 block_index = 1;
    uint64 timestamp = 2;
    uint64 nonce = 3;
    repeated Transaction txns = 4;
    fixed64 proof = 5;
    fixed64 last_block = 6;
}

message Transaction {
    bytes sender = 1;
    bytes recipient = 2;
    uint64 amount = 3;
    uint64 timestamp = 4;
    uint64 nonce = 5;
    bool blockReward = 6;
    bytes signature = 7;
}

message TransactionResponse {
    enum Data {
        ERR = 0;
        OK = 1;

        INSUFFICIENT_FUNDS = 2;
        INVALID_SIGNATURE = 3;
    }

    Data data = 1;
}

message SyncRequest {
    uint64 fromBlock = 1;
}

message BlockRequest {
    uint64 blockIndex = 1;
}

message InitData {
    Block lastBlock = 1;
    repeated bytes acceptedTransactions = 2;

    message LedgerEntry {
        bytes id = 1;
        uint64 amount = 2;
    }

    repeated LedgerEntry ledger = 3;
}

service Client {
    rpc SubmitTransaction (Transaction) returns (TransactionResponse);
}

service Blockchain {
    rpc RetriveInitData     (UnitMessage)               returns (InitData);
    rpc ExchangePendingTxns (stream Transaction)        returns (stream Transaction);
    rpc Sync                (SyncRequest)               returns (stream Block);
    rpc GetBlock            (BlockRequest)              returns (Block);
}

message Node {
    fixed32 address = 1;
    uint32 port = 2;

    message NodeInfo {
        string name = 1;
        uint64 up_since = 2;  // epoch millis
    }

    NodeInfo info = 4;
}

service Registry {
    rpc Exchange    (stream Node)   returns (stream Node);
}
